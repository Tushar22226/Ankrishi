import { Platform, Share } from 'react-native';

/**
 * A simple alternative to PDF generation that just shares the content as text
 * @param textContent Text content to share
 * @param title Title for the share dialog
 */
export const shareAsText = async (textContent: string, title: string = 'Share Plan'): Promise<void> => {
  try {
    console.log('Sharing content as text...');

    // Share the text content
    await Share.share({
      title: title,
      message: textContent,
    });

    console.log('Content shared successfully');
  } catch (error) {
    console.error('Error sharing content:', error);
    throw error;
  }
};

/**
 * Extracts plain text from HTML content
 * @param htmlContent HTML content to extract text from
 * @returns Plain text content
 */
const extractTextFromHtml = (htmlContent: string): string => {
  // Remove HTML tags
  let text = htmlContent.replace(/<[^>]*>/g, ' ');

  // Replace multiple spaces with a single space
  text = text.replace(/\s+/g, ' ');

  // Replace HTML entities
  text = text.replace(/&nbsp;/g, ' ')
             .replace(/&amp;/g, '&')
             .replace(/&lt;/g, '<')
             .replace(/&gt;/g, '>')
             .replace(/&quot;/g, '"')
             .replace(/&#39;/g, "'");

  // Trim whitespace
  text = text.trim();

  return text;
};

/**
 * Formats financial plan data as plain text
 * @param planData Financial plan data
 * @param projections Monthly projections
 * @param recommendations Recommendations
 * @returns Formatted text
 */
export const formatFinancialPlanAsText = (
  planData: any,
  projections: any[],
  recommendations: string[]
): string => {
  let text = '';

  // Header
  text += `FINANCIAL PLAN\n`;
  text += `Generated for: ${planData.userName || 'Farmer'}\n`;
  text += `Date: ${new Date(planData.createdAt).toLocaleDateString()}\n\n`;

  // Basic Information
  text += `BASIC INFORMATION\n`;
  text += `Land Size: ${planData.landSize} acres\n`;
  text += `Primary Crop: ${planData.cropType || 'Not specified'}\n`;
  text += `Expected Yield: ${planData.expectedYield} quintals\n`;
  text += `Plan Duration: ${planData.planDuration} months\n\n`;

  // Financial Summary
  text += `FINANCIAL SUMMARY\n`;
  text += `Current Savings: ₹${planData.currentSavings.toLocaleString()}\n`;
  text += `Monthly Income: ₹${planData.monthlyIncome.toLocaleString()}\n`;
  text += `Monthly Expenses: ₹${planData.monthlyExpenses.toLocaleString()}\n`;
  text += `Loan Amount: ₹${planData.loanAmount.toLocaleString()}\n`;
  text += `Interest Rate: ${planData.interestRate}%\n\n`;

  // Projections
  text += `PROJECTIONS\n`;
  text += `Month | Income | Expenses | Cash Flow | Savings | Loan Balance\n`;
  text += `----------------------------------------------------------\n`;

  projections.forEach(p => {
    text += `${p.month} | ₹${p.income.toLocaleString()} | ₹${p.expenses.toLocaleString()} | `;
    text += `₹${p.cashFlow.toLocaleString()} | ₹${p.savings.toLocaleString()} | ₹${p.loanBalance.toLocaleString()}\n`;
  });

  text += `\n`;

  // Recommendations
  text += `RECOMMENDATIONS\n`;
  recommendations.forEach((rec, index) => {
    text += `${index + 1}. ${rec}\n`;
  });

  text += `\nGenerated by FarmConnect App`;

  return text;
};
