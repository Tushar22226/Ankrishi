import { Share } from 'react-native';
import { Contract } from '../models/Contract';
import { formatDate, formatCurrency } from '../utils/formatUtils';

class ContractPDFService {

  /**
   * Generate and share a contract as text
   * @param contract Contract data
   * @returns Promise resolving to a success message
   */
  async generateContractPDF(contract: Contract): Promise<string> {
    try {
      console.log('Generating contract text for sharing...');

      // Create a text version of the contract
      const textContract = this.generateContractText(contract);

      // Share the text directly
      await Share.share({
        title: `Contract_${contract.id}`,
        message: textContract
      });

      return 'Contract shared as text successfully';
    } catch (error) {
      console.error('Error in contract sharing process:', error);
      throw error;
    }
  }

  /**
   * Generate a text representation of the contract
   * @param contract Contract data
   * @returns Text representation of the contract
   */
  generateContractText(contract: Contract): string {
    // Format dates
    const startDate = formatDate(contract.startDate);
    const endDate = formatDate(contract.endDate);
    const createdDate = formatDate(contract.createdAt);

    // Format contract terms as text
    const termsText = contract.terms.map((term, index) => `${index + 1}. ${term}`).join('\n');

    // Format quality standards as text if they exist
    const qualityStandardsText = contract.qualityStandards
      ? contract.qualityStandards.map((standard, index) => `- ${standard}`).join('\n')
      : '';

    // Generate the text content
    let text = `
==============================================
                CONTRACT AGREEMENT
==============================================

FARMCONNECT

${contract.title}
${contract.type.charAt(0).toUpperCase() + contract.type.slice(1)} Contract

Contract ID: ${contract.id}
Date: ${createdDate}

----------------------------------------------
CONTRACT DETAILS
----------------------------------------------

Contract Type: ${contract.type.charAt(0).toUpperCase() + contract.type.slice(1)}
Contract Period: ${startDate} to ${endDate}
Contract Value: ${formatCurrency(contract.value)}
`;

    if (contract.quantity && contract.unit) {
      text += `Quantity: ${contract.quantity} ${contract.unit}\n`;
    }

    if (contract.pricePerUnit && contract.unit) {
      text += `Price Per Unit: ${formatCurrency(contract.pricePerUnit)} per ${contract.unit}\n`;
    }

    if (contract.paymentTerms) {
      text += `Payment Terms: ${contract.paymentTerms}\n`;
    }

    if (contract.deliveryTerms) {
      text += `Delivery Terms: ${contract.deliveryTerms}\n`;
    }

    text += `
----------------------------------------------
PARTIES
----------------------------------------------

First Party: ${contract.parties.firstPartyUsername} (${contract.creatorRole})
Second Party: ${contract.parties.secondPartyUsername || 'Not Assigned'}

----------------------------------------------
CONTRACT DESCRIPTION
----------------------------------------------

${contract.description}

----------------------------------------------
TERMS AND CONDITIONS
----------------------------------------------

${termsText}
`;

    if (contract.qualityStandards && contract.qualityStandards.length > 0) {
      text += `
----------------------------------------------
QUALITY STANDARDS
----------------------------------------------

${qualityStandardsText}
`;
    }

    text += `
----------------------------------------------
SIGNATURES
----------------------------------------------

${contract.parties.firstPartyUsername} (First Party)


${contract.parties.secondPartyUsername || '___________________'} (Second Party)


==============================================
This document is legally binding once signed by both parties.
Generated by FarmConnect Contract Management System on ${new Date().toLocaleDateString()}
Â© ${new Date().getFullYear()} FarmConnect. All rights reserved.
==============================================
`;

    return text;
  }
}

export default new ContractPDFService();
